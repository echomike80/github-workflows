name: Utils Renovate Bot

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Environment to run against
        type: environment
        required: true
        default: test
      dryrun:
        description: 'Perform a dry run as described in docs: https://docs.renovatebot.com/self-hosted-configuration/#dryrun'
        type: choice
        required: false
        default: ''
        options:
          - '' # Performs a regular Renovate run including creating/updating/deleting branches and PRs
          - extract
          - lookup
          - full
      logLevel:
        description: Log level
        required: true
        default: info
        type: choice
        options:
          # - trace
          - debug
          - info
          # - warn
          # - error
          # - fatal

jobs:
  setup:
    runs-on: ubuntu-latest # [self-hosted, linux]
    outputs:
      runner: ${{ steps.set_target_instance.outputs.runner }}
    steps:
    - name: Show run details
      id: show_run_details
      run: |
        echo "WORKFLOW: ${{ github.workflow }}"
        # echo "BRANCH: $(echo ${GITHUB_REF#refs/heads/})" -> Fallback in case of next variable beeing empty or does not provide the necessary information, e.g. for pull-requests
        echo "BRANCH_NAME: ${{ github.ref_name }}"
        echo "SHA: ${{ github.sha }}"
        echo "ENV: ${{ github.event.inputs.environment || 'test' }}"
        echo "USER: ${{ github.actor }}"
        echo "TRIGGERING_USER: ${{ github.triggering_actor }}"

    - name: Set target instance
      id: set_target_instance
      run: |
        # for runner versions < 2.297.0
        # echo "::set-output name=runner::['ubuntu-latest']"
        # for runner versions >= 2.297.0
        # see https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/ for details
        echo "runner=['ubuntu-latest']" >>$GITHUB_OUTPUT

  renovate:
    name: Run Renovate on mms-bauhybr
    needs: [setup]
    runs-on: ${{ fromJSON(needs.setup.outputs.runner) }}
    environment: ${{ github.event.inputs.environment || 'test' }}
    container: 
      image: docker.io/renovate/renovate:36
    steps:
      - name: Run Renovate
        run: |
          renovate
        env:
          LOG_LEVEL: ${{ github.event.inputs.logLevel }}
          RENOVATE_AUTODISCOVER: ${{ vars.RENOVATE_AUTODISCOVER }}
          RENOVATE_AUTODISCOVER_FILTER: ${{ vars.RENOVATE_AUTODISCOVER_FILTER }}
          RENOVATE_DRY_RUN: ${{ github.event.inputs.dryrun }}
          # RENOVATE_ENDPOINT: https://github.example.com/api/v3/
          RENOVATE_PLATFORM: ${{ vars.RENOVATE_PLATFORM }}
          RENOVATE_TOKEN: ${{ secrets.RENOVATE_TOKEN }}

